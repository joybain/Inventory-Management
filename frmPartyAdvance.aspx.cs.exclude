using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using Delve;
using System.Data;
using sales;
using iTextSharp.text;
using iTextSharp.text.pdf;
using iTextSharp.text.pdf.draw;
using System.Data.SqlClient;

public partial class frmPartyAdvance : System.Web.UI.Page
{
    PartyInfoManager aPartyInfoManager = new PartyInfoManager();
    private static Permis per;
    protected void Page_Load(object sender, EventArgs e)
    {
        if (Session["user"] == null)
        {
            if (Session.SessionID != "" | Session.SessionID != null)
            {
                clsSession ses = clsSessionManager.getSession(Session.SessionID);
                if (ses != null)
                {
                    Session["user"] = ses.UserId;
                    Session["book"] = "AMB";
                    string connectionString = DataManager.OraConnString();
                    SqlDataReader dReader;
                    SqlConnection conn = new SqlConnection();
                    conn.ConnectionString = connectionString;
                    SqlCommand cmd = new SqlCommand();
                    cmd.Connection = conn;
                    cmd.CommandType = CommandType.Text;
                    cmd.CommandText =
                        "Select user_grp,[description],UserType,case when UserType=1 then 'Bangladesh' else 'Philippine' end AS[LoginCountry] from utl_userinfo where upper(user_name)=upper('" +
                        Session["user"].ToString().ToUpper() + "') and status='A'";
                    conn.Open();
                    dReader = cmd.ExecuteReader();
                    string wnot = "";
                    if (dReader.HasRows == true)
                    {
                        while (dReader.Read())
                        {
                            Session["userlevel"] = int.Parse(dReader["user_grp"].ToString());
                            //Session["dept"] = dReader["dept"].ToString();
                            wnot = "Welcome " + dReader["description"].ToString();
                        }
                        Session["wnote"] = wnot;
                        Session["LoginCountry"] = dReader["LoginCountry"].ToString();
                        cmd = new SqlCommand();
                        cmd.Connection = conn;
                        cmd.CommandType = CommandType.Text;
                        //cmd.CommandText = "Select book_desc,company_address1,company_address2,separator_type from gl_set_of_books where book_name='" + Session["book"].ToString() + "' ";
                        if (Convert.ToInt32(dReader["UserType"].ToString()) == 2)
                        {

                            Session["bookMAN"] = "MAN";
                        }
                        else
                        {
                            Session["bookMAN"] = Session["book"].ToString();
                        }
                        cmd.CommandText = "Select book_desc,company_address1,company_address2,separator_type,ShotName from gl_set_of_books where book_name='" + Session["bookMAN"] + "' ";

                        if (dReader.IsClosed == false)
                        {
                            dReader.Close();
                        }
                        dReader = cmd.ExecuteReader();
                        if (dReader.HasRows == true)
                        {
                            while (dReader.Read())
                            {
                                Session["septype"] = dReader["separator_type"].ToString();
                                Session["org"] = dReader["book_desc"].ToString();
                                Session["add1"] = dReader["company_address1"].ToString();
                                Session["add2"] = dReader["company_address2"].ToString();
                            }
                        }
                    }
                    dReader.Close();
                    conn.Close();
                }
            }
        }
        try
        {
            string pageName = DataManager.GetCurrentPageName();
            string modid = PermisManager.getModuleId(pageName);
            per = PermisManager.getUsrPermis(Session["user"].ToString().Trim().ToUpper(), modid);
            if (per != null && per.AllowView == "Y")
            {
                ((Label)Page.Master.FindControl("lblLogin")).Text = Session["wnote"].ToString();
                ((Label)Page.Master.FindControl("lblCountryName")).Text = Session["LoginCountry"].ToString();
                ((LinkButton)Page.Master.FindControl("lbLogout")).Visible = true;
            }
            else
            {
                Response.Redirect("Home.aspx?sid=sam");
            }
        }
        catch
        {
            Response.Redirect("Default.aspx?sid=sam");
        }  

        if (!IsPostBack)
        {
            
            PaymentMathord.Visible = false;
            string query2 = "select '' [bank_id],'' [bank_name]  union select [bank_id] ,[bank_name] from [bank_info] order by 1";
            util.PopulationDropDownList(ddlBankName, "bank_info", query2, "bank_name", "bank_id");
            DataTable dt1 = IdManager.GetShowDataTable("SELECT * FROM [FixGlCoaCode]");
            Session["Cash_Code"] = dt1.Rows[0]["CashInHand_BD"].ToString();
            Session["Cash_Name"] = dt1.Rows[0]["CashName_BD"].ToString();
            txtDate.Text = DateTime.Now.ToString("dd/MM/yyyy");
            RadioButtonList1_SelectedIndexChanged(sender,e);
        }
    }
    protected void RadioButtonList1_SelectedIndexChanged(object sender, EventArgs e)
    {
        lblPVID.Text = "";
        if (RadioButtonList1.SelectedValue == "PA")
        {
            lblPartyName.Text = "Party Name ";
            lblID.Text = lblGlCoa.Text = lblAddress.Text ="";
            lblAdvance.Text = "Advance Amount ";
            lblVoucherNo.Visible =txtVoucherNo.Visible= false;
            ddlName.DataSource = aPartyInfoManager.getPartyInfoDetails();
            ddlName.DataTextField = "PartyName";
            ddlName.DataValueField = "ID";
            ddlName.DataBind();
            ddlName.Items.Insert(0,"");
            DataTable dt = PartyAdvanceManager.GetShowPartyDetails("PA");
            Session["SP"] = dt;
            GridView1.DataSource = dt;
            GridView1.DataBind();
           
        }
        else
        {           
            lblPartyName.Text = "Supplier Name ";
            lblID.Text = lblGlCoa.Text = lblAddress.Text = "";
            lblAdvance.Text = "Payment Amount ";
            lblVoucherNo.Visible =txtVoucherNo.Visible= true;
            lblVoucherNo.Text = "Voucher No. ";
            ddlName.DataSource = SupplierManager.GetSuppliers();
            ddlName.DataTextField = "ContactName";
            ddlName.DataValueField = "ID";
            ddlName.DataBind();
            ddlName.Items.Insert(0, "");
            DataTable dt = PartyAdvanceManager.GetShowPartyDetails("SAP");
            Session["SP"] = dt;
            GridView1.DataSource = dt;
            GridView1.DataBind();
        }
        txtDate.Text = DateTime.Now.ToString("dd/MM/yyyy");
        txtAdvance.Text = lblBlance.Text = "0";
        lblBlance.Visible = false;
        ddlName.Enabled = true;
        UP1.Update();
        UP2.Update();
        UP3.Update();
    }
    protected void ddlName_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (RadioButtonList1.SelectedValue == "PA")
        {
            DataTable dt = aPartyInfoManager.ShowPartyInfo(ddlName.SelectedValue);
            if (dt.Rows.Count > 0)
            {
                lblGlCoa.Text = dt.Rows[0]["Gl_CoaCode"].ToString();
                ViewState["Gl_CoaCode"] = dt.Rows[0]["Gl_CoaCode"].ToString();
                lblAddress.Text = dt.Rows[0]["Address"].ToString()+" , "+ dt.Rows[0]["Phone"].ToString();
            }
        }
        else
        {
             Supplier sup = SupplierManager.GetSupplier(ddlName.SelectedValue);
             if (sup != null)
             {
                 lblGlCoa.Text = sup.GlCoa;
                 ViewState["Gl_CoaCode"] = sup.GlCoa;
                 lblAddress.Text = sup.SupAddr1+" , "+sup.SupPhone;                 
             }
        }
        DataTable ddt = BankAndCashBlanceCheck.GetCheckBlanceInAcc("1-" + lblGlCoa.Text.Trim(), "AMB", DateTime.Now.ToString("dd/MM/yyyy"), DateTime.Now.ToString("dd/MM/yyyy"));
        if (ddt.Rows.Count > 1)
        {
            DataRow lastRow = ddt.Rows[ddt.Rows.Count - 1];
            lblBlance.Text = "Blance : " + lastRow["bal"].ToString();
        }
        else
        {
            lblBlance.Text = "Blance : " + ddt.Rows[0]["bal"].ToString();
        }
        lblBlance.Visible = true;
        UP1.Update();
        UP2.Update();
        txtAdvance.Focus();       
    }
    protected void btnSave_Click(object sender, EventArgs e)
    {
        
        PartyAdvance aPartyAdvance = PartyAdvanceManager.GetShowPartyAdvanceDetails(lblID.Text);
        //*************** Save *****************//
        if (aPartyAdvance == null)
        {
            aPartyAdvance = new PartyAdvance();
            aPartyAdvance.MstID = ddlName.SelectedValue;
            aPartyAdvance.PayDate = txtDate.Text;
            aPartyAdvance.PayMethod = ddlPaymentMethord.SelectedValue;
            aPartyAdvance.VoucherNo = lblPVID.Text;
            if (RadioButtonList1.SelectedValue == "PA")
            {
                aPartyAdvance.Advance = txtAdvance.Text.Replace(",", "");
                aPartyAdvance.PaymentAmount = "0";
                aPartyAdvance.Flag = "PA";
                //******************* Advance Party ****************//
                PartyAdvanceManager.SavePartyAdvance(aPartyAdvance);
                lblID.Text = IdManager.GetShowSingleValueIntNotParameter("TOP(1)[ID]", "[PartyAdvance] order by ID DESC").ToString();
                if (ddlPaymentMethord.SelectedValue == "Q")
                {
                    if (ddlChequeStatus.SelectedValue == "A")
                    { PartyAccCreditVoucherSave();}
                }
                else
                { PartyAccCreditVoucherSave(); }
            }
            else
            {
                if (txtVoucherNo.Text == "")
                {
                    ClientScript.RegisterStartupScript(this.GetType(), "ale", "alert('Enter Voucher No..!!');", true);
                    return;
                }
                aPartyAdvance.PaymentAmount = txtAdvance.Text.Replace(",", "");
                aPartyAdvance.Advance = "0";
                aPartyAdvance.Flag = "SAP";
                //************************ Party To Supplier ****************************//
                PartyAdvanceManager.SavePartyAdvance(aPartyAdvance);
                lblID.Text = IdManager.GetShowSingleValueIntNotParameter("TOP(1)[ID]", "[PartyAdvance] order by ID DESC").ToString();
                if (ddlPaymentMethord.SelectedValue == "Q")
                {
                    if (ddlChequeStatus.SelectedValue == "A")
                    { SupplierAccDebitVoucherSave(); }
                }
                else
                { PV_Acc_JurnalVoucher_Save(); SupplierAccDebitVoucherSave(); }                
            }
            ClientScript.RegisterStartupScript(this.GetType(), "ale", "alert('Record(s) is/are save suceessfullly..!!');", true);
            btnSave.Enabled = false;
        }
        else
        {
            //*************** Update *****************//
            aPartyAdvance.ID = lblID.Text;
            aPartyAdvance.MstID = ddlName.SelectedValue;
            aPartyAdvance.PayDate = txtDate.Text;
            aPartyAdvance.PayMethod = ddlPaymentMethord.SelectedValue;
            if (RadioButtonList1.SelectedValue == "PA")
            {
                aPartyAdvance.Flag = "PA";
                aPartyAdvance.Advance = txtAdvance.Text.Replace(",", "");
                aPartyAdvance.PaymentAmount = "0";
                PartyAdvanceManager.UpdatePartyAdvance(aPartyAdvance);
                if (ddlPaymentMethord.SelectedValue.Trim() == "Q")
                {
                    string st = IdManager.GetShowSingleValueString("Chk_Status", "ID", "PartyAdvance", lblID.Text);
                    if (st.Trim() == "P" && ddlChequeStatus.SelectedValue.Trim() == "A")
                    { PartyAccCreditVoucherSave(); }
                    else
                    { PartyAccCreditVoucherUpdate(); }
                }
                else
                { PartyAccCreditVoucherUpdate(); }
            }
            else
            {
                aPartyAdvance.PaymentAmount = txtAdvance.Text.Replace(",", "");
                aPartyAdvance.Advance = "0";
                aPartyAdvance.Flag = "SAP";
                PartyAdvanceManager.UpdatePartyAdvance(aPartyAdvance);
                if (ddlPaymentMethord.SelectedValue.Trim() == "Q")
                {
                    string st = IdManager.GetShowSingleValueString("Chk_Status", "ID", "PartyAdvance", lblID.Text);
                    if (st.Trim() == "P" && ddlChequeStatus.SelectedValue.Trim() == "A")
                    { SupplierAccDebitVoucherSave(); }
                    else
                    { SupplierAccDebitVoucherUpdate(); }
                }
                else
                { PV_Acc_JurnalVoucher_Update(); SupplierAccDebitVoucherUpdate(); }
               
            }
            ClientScript.RegisterStartupScript(this.GetType(), "ale", "alert('Record(s) is/are update suceessfullly..!!');", true);
        }
    }
    private void PartyAccCreditVoucherSave()
    {
        if (Convert.ToDouble(txtAdvance.Text) > 0)
        {
            VouchMst vmst = new VouchMst();
            vmst.FinMon = FinYearManager.getFinMonthByDate(txtDate.Text);
            vmst.ValueDate = txtDate.Text;
            vmst.VchCode = "02";
            vmst.RefFileNo = "";
            vmst.VolumeNo = "";
            vmst.SerialNo = lblID.Text;
            vmst.Particulars = "Advance Amount receive for Party - ( " + lblID.Text + "-" + ddlName.SelectedItem.Text + " )";
            vmst.ControlAmt = txtAdvance.Text.Replace(",", "");
            vmst.Payee = "PA";
            vmst.CheckNo = txtChqDate.Text;
            vmst.CheqDate = txtChqDate.Text;
            if (ddlPaymentMethord.SelectedValue == "C") { vmst.CheqAmnt = txtAdvance.Text.Replace(",", ""); }
            else { vmst.CheqAmnt = "0"; }
            vmst.MoneyRptNo = "";
            vmst.MoneyRptDate = "";
            vmst.TransType = "R";
            vmst.BookName = Session["book"].ToString();
            vmst.EntryUser = Session["user"].ToString();
            vmst.EntryDate = DateTime.Parse(DateTime.Now.ToString()).ToString("dd/MM/yyyy");
            vmst.VchSysNo = IdManager.GetNextID("gl_trans_mst", "vch_sys_no").ToString();
            vmst.VchRefNo = "CV-" + vmst.VchSysNo.ToString().PadLeft(10, '0');
            vmst.Status = "U";
            vmst.AuthoUserType = Session["userlevel"].ToString();
            VouchManager.CreateVouchMst(vmst);
            VouchDtl vdtl;
            for (int i = 0; i < 2; i++)
            {
                if (i == 0)
                {
                    vdtl = new VouchDtl();
                    vdtl.VchSysNo = vmst.VchSysNo;
                    vdtl.ValueDate = txtDate.Text;
                    vdtl.LineNo = "1";
                    if (ddlPaymentMethord.SelectedValue != "C")
                    {
                        string BankCOA = IdManager.GetShowSingleValueString("gl_coa_code", "bank_id", "bank_info", ddlBankName.SelectedValue);
                        vdtl.GlCoaCode = "1-" + BankCOA;
                        vdtl.Particulars = "Cash at Bank: Advance Amount Receive ";
                        vdtl.AccType = VouchManager.getAccType("1-" + BankCOA);
                    }
                    else
                    {
                        vdtl.GlCoaCode = "1-" + Session["Cash_Code"];
                        vdtl.Particulars = Session["Cash_Name"].ToString() + " : Advance Amount Receive ";
                        vdtl.AccType = VouchManager.getAccType("1-" + Session["Cash_Code"]);
                    }

                    vdtl.AmountDr = txtAdvance.Text.Replace(",", "");
                    vdtl.AmountCr = "0";
                    vdtl.Status = "U";
                    vdtl.BookName = Session["book"].ToString();
                    VouchManager.CreateVouchDtl(vdtl);
                }
                else if (i == 1)
                {
                    vdtl = new VouchDtl();
                    vdtl.VchSysNo = vmst.VchSysNo;
                    vdtl.ValueDate = txtDate.Text;
                    vdtl.LineNo = "2";
                    vdtl.GlCoaCode = "1-" + ViewState["Gl_CoaCode"].ToString();
                    vdtl.Particulars = "Advance Bill On Party - ("+ddlName.SelectedItem.Text+")";
                    vdtl.AccType = VouchManager.getAccType("1-" + ViewState["Gl_CoaCode"].ToString());
                    vdtl.AmountDr = "0";
                    vdtl.AmountCr = txtAdvance.Text.Replace(",", "");
                    vdtl.Status = "U";
                    vdtl.BookName = Session["book"].ToString();
                    VouchManager.CreateVouchDtl(vdtl);
                }
            }
        }
    }
    private void PartyAccCreditVoucherUpdate()
    {
        if (Convert.ToDouble(txtAdvance.Text) > 0)
        {
            string VoucherID = IdManager.GetShowSingleValueString("VCH_SYS_NO", "t1.PAYEE='PA' and SUBSTRING(t1.VCH_REF_NO,1,2)='CV' and t1.SERIAL_NO", "GL_TRANS_MST t1", lblID.Text);
            VouchMst vmst = VouchManager.GetVouchMst(VoucherID.Trim());
            if (vmst != null)
            {
                vmst.FinMon = FinYearManager.getFinMonthByDate(txtDate.Text);
                vmst.ValueDate = txtDate.Text;
                vmst.VchCode = "02";
                vmst.RefFileNo = "";
                vmst.VolumeNo = "";               
                vmst.ControlAmt = txtAdvance.Text.Replace(",", "");              
                vmst.CheckNo = txtChqDate.Text;
                vmst.CheqDate = txtChqDate.Text;
                if (ddlPaymentMethord.SelectedValue == "C") { vmst.CheqAmnt = txtAdvance.Text.Replace(",", ""); }
                else { vmst.CheqAmnt = "0"; }
                vmst.BookName = Session["book"].ToString();
                vmst.UpdateUser = Session["user"].ToString();
                vmst.UpdateDate = DateTime.Parse(DateTime.Now.ToString()).ToString("dd/MM/yyyy");
                vmst.AuthoUserType = Session["userlevel"].ToString();
                VouchManager.UpdateVouchMst(vmst);
                VouchManager.DeleteVouchDtl(vmst.VchSysNo);
                VouchDtl vdtl;
                for (int i = 0; i < 2; i++)
                {
                    if (i == 0)
                    {
                        vdtl = new VouchDtl();
                        vdtl.VchSysNo = vmst.VchSysNo;
                        vdtl.ValueDate = txtDate.Text;
                        vdtl.LineNo = "1";
                        if (ddlPaymentMethord.SelectedValue != "C")
                        {
                            string BankCOA = IdManager.GetShowSingleValueString("gl_coa_code", "bank_id", "bank_info", ddlBankName.SelectedValue);
                            vdtl.GlCoaCode = "1-" + BankCOA;
                            vdtl.Particulars = "Cash at Bank: Advance Amount Receive ";
                            vdtl.AccType = VouchManager.getAccType("1-" + BankCOA);
                        }
                        else
                        {
                            vdtl.GlCoaCode = "1-" + Session["Cash_Code"];
                            vdtl.Particulars = Session["Cash_Name"].ToString() + " : Advance Amount Receive ";
                            vdtl.AccType = VouchManager.getAccType("1-" + Session["Cash_Code"]);
                        }

                        vdtl.AmountDr = txtAdvance.Text.Replace(",", "");
                        vdtl.AmountCr = "0";
                        vdtl.Status = vmst.Status;
                        vdtl.BookName = Session["book"].ToString();
                        VouchManager.CreateVouchDtl(vdtl);
                    }
                    else if (i == 1)
                    {
                        vdtl = new VouchDtl();
                        vdtl.VchSysNo = vmst.VchSysNo;
                        vdtl.ValueDate = txtDate.Text;
                        vdtl.LineNo = "2";
                        vdtl.GlCoaCode = "1-" + ViewState["Gl_CoaCode"].ToString();
                        vdtl.Particulars = "Advance Bill On Party";
                        vdtl.AccType = VouchManager.getAccType("1-" + ViewState["Gl_CoaCode"].ToString());
                        vdtl.AmountDr = "0";
                        vdtl.AmountCr = txtAdvance.Text.Replace(",", "");
                        vdtl.Status = vmst.Status;
                        vdtl.BookName = Session["book"].ToString();
                        VouchManager.CreateVouchDtl(vdtl);
                    }
                }
            }
        }
    }

    private void PV_Acc_JurnalVoucher_Save()
    {
        //******************************* Advanve in Pary  To Supplier *******************//
        VouchMst vmst = null;
        DataTable dt1 = IdManager.GetShowDataTable("SELECT * FROM [FixGlCoaCode]");
        string PurchaseCode = dt1.Rows[0]["PurchaseCode"].ToString();
        if (Convert.ToDouble(txtAdvance.Text) > 0)
        {
            DataTable dtt = IdManager.GetShowDataTable("SELECT t1.[PartyID],t2.PartyName,t2.Gl_CoaCode  FROM [ItemPurchaseMst] t1 inner join PartyInfo t2 on t2.ID=t1.PartyID WHERE  t1.[ID]='" + lblPVID.Text + "'");
            if (dtt.Rows.Count > 0)
            {
                vmst = new VouchMst();
                lblGlCoa.Text = dtt.Rows[0]["Gl_CoaCode"].ToString();
                vmst.FinMon = FinYearManager.getFinMonthByDate(txtDate.Text);
                vmst.ValueDate = txtDate.Text;
                vmst.VchCode = "03";
                vmst.RefFileNo = "";
                vmst.VolumeNo = "";
                vmst.SerialNo = lblID.Text;
                vmst.Particulars = "Payment Aginest Purchase No.(" + txtVoucherNo.Text + ") from Party- (" + dtt.Rows[0]["PartyName"].ToString() + ")";
                vmst.ControlAmt = txtAdvance.Text.Replace(",", "");
                vmst.Payee = "PAJV";
                //vmst.CheckNo = txtChqueNo.Text;
                vmst.CheckNo = txtChqDate.Text;
                vmst.CheqDate = txtChqDate.Text;
                if (ddlPaymentMethord.SelectedValue != "C") { vmst.CheqAmnt = txtAdvance.Text.Replace(",", ""); }
                else { vmst.CheqAmnt = "0"; }
                vmst.MoneyRptNo = "";
                vmst.MoneyRptDate = "";
                //vmst.CheqDate = txtChqDate.Text;
                vmst.TransType = "R";
                vmst.BookName = "AMB";
                vmst.EntryUser = Session["user"].ToString();
                vmst.EntryDate = DateTime.Parse(DateTime.Now.ToString()).ToString("dd/MM/yyyy");
                vmst.VchSysNo = IdManager.GetNextID("gl_trans_mst", "vch_sys_no").ToString();
                vmst.VchRefNo = "JV-" + vmst.VchSysNo.ToString().PadLeft(10, '0');
                vmst.Status = "A";
                vmst.AuthoUserType = Session["userlevel"].ToString();
                VouchManager.CreateVouchMst(vmst);
                VouchDtl vdtl;
                for (int j = 0; j < 2; j++)
                {
                    if (j == 0)
                    {
                        vdtl = new VouchDtl();
                        vdtl.VchSysNo = vmst.VchSysNo;
                        vdtl.ValueDate = txtDate.Text;
                        vdtl.LineNo = "1";
                        vdtl.GlCoaCode = "1-" + dtt.Rows[0]["Gl_CoaCode"].ToString();
                        vdtl.Particulars = "On Party - " + dtt.Rows[0]["PartyName"].ToString();
                        vdtl.AccType = VouchManager.getAccType("1-" + dtt.Rows[0]["Gl_CoaCode"].ToString());
                        vdtl.AmountDr = txtAdvance.Text.Replace(",", "");
                        vdtl.AmountCr = "0";
                        vdtl.Status = "A";
                        vdtl.BookName = "AMB";
                        VouchManager.CreateVouchDtl(vdtl);
                    }
                    else if (j == 1)
                    {
                        vdtl = new VouchDtl();
                        vdtl.VchSysNo = vmst.VchSysNo;
                        vdtl.ValueDate = txtDate.Text;
                        vdtl.LineNo = "2";
                        vdtl.GlCoaCode = PurchaseCode; //**** AdditionalCharge Code *******//
                        vdtl.Particulars = "Purchase Payable Amount";
                        vdtl.AccType = VouchManager.getAccType(PurchaseCode); //**** AdditionalCharge Code *******//
                        vdtl.AmountDr = "0";
                        vdtl.AmountCr = txtAdvance.Text.Replace(",", "");
                        vdtl.Status = "A";
                        vdtl.BookName = "AMB";
                        VouchManager.CreateVouchDtl(vdtl);
                    }
                }
            }
        }  
    }
    private void PV_Acc_JurnalVoucher_Update()
    {
        string Serial = IdManager.GetShowSingleValueString("VCH_SYS_NO", "t1.PAYEE='PAJV' and SUBSTRING(t1.VCH_REF_NO,1,2)='JV' and t1.SERIAL_NO", "GL_TRANS_MST t1",lblID.Text);       
        //******************************* Advanve in Pary  To Supplier *******************//
        DataTable dt1 = IdManager.GetShowDataTable("SELECT * FROM [FixGlCoaCode]");
        string PurchaseCode = dt1.Rows[0]["PurchaseCode"].ToString();
        if (Convert.ToDouble(txtAdvance.Text) > 0)
        {
            DataTable dtt = IdManager.GetShowDataTable("SELECT t1.[PartyID],t2.PartyName,t2.Gl_CoaCode  FROM [ItemPurchaseMst] t1 inner join PartyInfo t2 on t2.ID=t1.PartyID WHERE  t1.[ID]='" + lblPVID.Text + "'");
            if (dtt.Rows.Count > 0)
            {
                VouchMst vmst = VouchManager.GetVouchMst(Serial.Trim());
                if (vmst != null)
                {
                    vmst.FinMon = FinYearManager.getFinMonthByDate(txtDate.Text);
                    vmst.ValueDate = txtDate.Text;
                    vmst.VchCode = "03";
                    vmst.RefFileNo = "";
                    vmst.VolumeNo = "";
                    vmst.ControlAmt = txtAdvance.Text.Replace(",", "");
                    vmst.Payee = "PAJV";
                    //vmst.CheckNo = txtChqueNo.Text;
                    vmst.CheckNo = txtChqDate.Text;
                    vmst.CheqDate = txtChqDate.Text;
                    if (ddlPaymentMethord.SelectedValue != "C") { vmst.CheqAmnt = txtAdvance.Text.Replace(",", ""); }
                    else { vmst.CheqAmnt = "0"; }
                    vmst.MoneyRptNo = "";
                    vmst.MoneyRptDate = "";
                    //vmst.CheqDate = txtChqDate.Text;
                    vmst.UpdateUser = Session["user"].ToString().ToUpper();
                    vmst.UpdateDate = System.DateTime.Now.ToString("dd/MM/yyyy");
                    vmst.AuthoUserType = Session["userlevel"].ToString();
                    VouchManager.UpdateVouchMst(vmst);
                    VouchManager.DeleteVouchDtl(vmst.VchSysNo);
                    VouchDtl vdtl;
                    for (int j = 0; j < 2; j++)
                    {
                        if (j == 0)
                        {
                            vdtl = new VouchDtl();
                            vdtl.VchSysNo = vmst.VchSysNo;
                            vdtl.ValueDate = txtDate.Text;
                            vdtl.LineNo = "1";
                            vdtl.GlCoaCode = "1-" + dtt.Rows[0]["Gl_CoaCode"].ToString();
                            vdtl.Particulars = "On Party - " + dtt.Rows[0]["PartyName"].ToString();
                            vdtl.AccType = VouchManager.getAccType("1-" + dtt.Rows[0]["Gl_CoaCode"].ToString());
                            vdtl.AmountDr = txtAdvance.Text.Replace(",", "");
                            vdtl.AmountCr = "0";
                            vdtl.Status = "A";
                            vdtl.BookName = "AMB";
                            VouchManager.CreateVouchDtl(vdtl);
                        }
                        else if (j == 1)
                        {
                            vdtl = new VouchDtl();
                            vdtl.VchSysNo = vmst.VchSysNo;
                            vdtl.ValueDate = txtDate.Text;
                            vdtl.LineNo = "2";
                            vdtl.GlCoaCode = PurchaseCode; //**** PurchaseCode *******//
                            vdtl.Particulars = "Purchase Payable Amount";
                            vdtl.AccType = VouchManager.getAccType(PurchaseCode); //**** PurchaseCode *******//
                            vdtl.AmountDr = "0";
                            vdtl.AmountCr = txtAdvance.Text.Replace(",", "");
                            vdtl.Status = "A";
                            vdtl.BookName = "AMB";
                            VouchManager.CreateVouchDtl(vdtl);
                        }
                    }
                }
            }
        }          
    }
    private void SupplierAccDebitVoucherSave()
    {
        if (Convert.ToDouble(txtAdvance.Text) > 0)
        {
            int ID = SupplierManager.GetShowPaymentID();
            VouchMst vmst = new VouchMst();
            vmst.FinMon = FinYearManager.getFinMonthByDate(txtDate.Text);
            vmst.ValueDate = txtDate.Text;
            vmst.VchCode = "01";
            vmst.RefFileNo = "";
            vmst.VolumeNo = "";
            vmst.SerialNo = lblID.Text;
            string Voucher = "";
            if (txtVoucherNo.Text != "")
            { Voucher = "( " + txtVoucherNo.Text + " )"; }
            vmst.Particulars = "Payment On Purchase Voucher " + Voucher + " Wise On Party Advance for Supplier.- (" + ID.ToString() + "-" + ddlName.SelectedItem.Text + ")";
            vmst.ControlAmt = txtAdvance.Text.Replace(",", "");
            vmst.Payee = "SAP";
            vmst.CheckNo = txtChqueNo.Text;
            vmst.CheqDate = txtChqDate.Text;
            if (ddlPaymentMethord.SelectedValue != "C") { vmst.CheqAmnt = txtAdvance.Text.Replace(",", ""); }
            else { vmst.CheqAmnt = "0"; }
            vmst.MoneyRptNo = "";
            vmst.MoneyRptDate = "";
            vmst.TransType = "R";
            vmst.BookName = Session["book"].ToString();
            vmst.EntryUser = Session["user"].ToString();
            vmst.EntryDate = DateTime.Parse(DateTime.Now.ToString()).ToString("dd/MM/yyyy");
            vmst.VchSysNo = IdManager.GetNextID("gl_trans_mst", "vch_sys_no").ToString();
            vmst.VchRefNo = "DV-" + vmst.VchSysNo.ToString().PadLeft(10, '0');
            vmst.Status = "U";
            vmst.AuthoUserType = Session["userlevel"].ToString();
            VouchManager.CreateVouchMst(vmst);
            VouchDtl vdtl;
            for (int j = 0; j < 2; j++)
            {
                if (j == 0)
                {
                    vdtl = new VouchDtl();
                    vdtl.VchSysNo = vmst.VchSysNo;
                    vdtl.ValueDate = txtDate.Text;
                    vdtl.LineNo = "1";
                    vdtl.GlCoaCode = "1-" + ViewState["Gl_CoaCode"].ToString();
                    vdtl.Particulars = "Supplier Payment for Voucher Wise( " + txtVoucherNo.Text + " ) ";
                    vdtl.AccType = VouchManager.getAccType("1-" + ViewState["Gl_CoaCode"].ToString());
                    vdtl.AmountDr = txtAdvance.Text.Replace(",", "");
                    vdtl.AmountCr = "0";
                    vdtl.Status = "U";
                    vdtl.BookName = Session["book"].ToString();
                    VouchManager.CreateVouchDtl(vdtl);
                }
                if (j == 1)
                {
                    vdtl = new VouchDtl();
                    vdtl.VchSysNo = vmst.VchSysNo;
                    vdtl.ValueDate = txtDate.Text;
                    vdtl.LineNo = "2";
                    if (ddlPaymentMethord.SelectedValue != "C")
                    {
                        string BankCOA = IdManager.GetShowSingleValueString("gl_coa_code", "bank_id", "bank_info", ddlBankName.SelectedValue);
                        vdtl.GlCoaCode = "1-" + BankCOA;
                        vdtl.Particulars = "Cash at Bank : Payment On Supplier for Party Advance ";
                        vdtl.AccType = VouchManager.getAccType("1-" + BankCOA);
                    }
                    else
                    {

                        vdtl.GlCoaCode = "1-" + Session["Cash_Code"].ToString();
                        vdtl.Particulars = Session["Cash_Name"].ToString() + " : Payment On Supplier for Party Advance ";
                        vdtl.AccType = VouchManager.getAccType("1-" + Session["Cash_Code"].ToString());
                    }

                    vdtl.AmountDr = "0";
                    vdtl.AmountCr = txtAdvance.Text.Replace(",", "");
                    vdtl.Status = "U";
                    vdtl.BookName = Session["book"].ToString();
                    VouchManager.CreateVouchDtl(vdtl);
                }
            }
        }
    }
    private void SupplierAccDebitVoucherUpdate()
    {
        string VoucherID = IdManager.GetShowSingleValueString("VCH_SYS_NO", "t1.PAYEE='SAP' and SUBSTRING(t1.VCH_REF_NO,1,2)='DV' and t1.SERIAL_NO", "GL_TRANS_MST t1", lblID.Text);
        if (Convert.ToDouble(txtAdvance.Text) > 0)
        {
            VouchMst vmst = VouchManager.GetVouchMst(VoucherID.Trim());
            if (vmst != null)
            {
                vmst.FinMon = FinYearManager.getFinMonthByDate(txtDate.Text);
                vmst.ValueDate = txtDate.Text;
                vmst.VchCode = "01";
                vmst.RefFileNo = "";
                vmst.VolumeNo = "";
                vmst.ControlAmt = txtAdvance.Text.Replace(",", "");
                vmst.CheckNo = txtChqueNo.Text;
                vmst.CheqDate = txtChqDate.Text;
                if (ddlPaymentMethord.SelectedValue != "C") { vmst.CheqAmnt = txtAdvance.Text.Replace(",", ""); }
                else { vmst.CheqAmnt = "0"; }
                vmst.BookName = Session["book"].ToString();
                vmst.UpdateUser = Session["user"].ToString();
                vmst.UpdateDate = DateTime.Parse(DateTime.Now.ToString()).ToString("dd/MM/yyyy");
                vmst.AuthoUserType = Session["userlevel"].ToString();
                VouchManager.UpdateVouchMst(vmst);
                VouchManager.DeleteVouchDtl(vmst.VchSysNo);
                VouchDtl vdtl;
                for (int j = 0; j < 2; j++)
                {
                    if (j == 0)
                    {
                        vdtl = new VouchDtl();
                        vdtl.VchSysNo = vmst.VchSysNo;
                        vdtl.ValueDate = txtDate.Text;
                        vdtl.LineNo = "1";
                        vdtl.GlCoaCode = "1-" + ViewState["Gl_CoaCode"].ToString();
                        vdtl.Particulars = "Supplier Payment for Voucher Wise( " + txtVoucherNo.Text + " ) ";
                        vdtl.AccType = VouchManager.getAccType("1-" + ViewState["Gl_CoaCode"].ToString());
                        vdtl.AmountDr = txtAdvance.Text.Replace(",", "");
                        vdtl.AmountCr = "0";
                        vdtl.Status = "U";
                        vdtl.BookName = Session["book"].ToString();
                        VouchManager.CreateVouchDtl(vdtl);
                    }
                    if (j == 1)
                    {
                        vdtl = new VouchDtl();
                        vdtl.VchSysNo = vmst.VchSysNo;
                        vdtl.ValueDate = txtDate.Text;
                        vdtl.LineNo = "2";
                        if (ddlPaymentMethord.SelectedValue != "C")
                        {
                            string BankCOA = IdManager.GetShowSingleValueString("gl_coa_code", "bank_id", "bank_info", ddlBankName.SelectedValue);
                            vdtl.GlCoaCode = "1-" + BankCOA;
                            vdtl.Particulars = "Cash at Bank : Payment On Supplier for Party Advance ";
                            vdtl.AccType = VouchManager.getAccType("1-" + BankCOA);
                        }
                        else
                        {

                            vdtl.GlCoaCode = "1-" + Session["Cash_Code"].ToString();
                            vdtl.Particulars = Session["Cash_Name"].ToString() + " : Payment On Supplier for Party Advance ";
                            vdtl.AccType = VouchManager.getAccType("1-" + Session["Cash_Code"].ToString());
                        }

                        vdtl.AmountDr = "0";
                        vdtl.AmountCr = txtAdvance.Text.Replace(",", "");
                        vdtl.Status = "U";
                        vdtl.BookName = Session["book"].ToString();
                        VouchManager.CreateVouchDtl(vdtl);
                    }
                }
            }
        }
    }

    protected void Delete_Click(object sender, EventArgs e)
    {
        PartyAdvance aPartyAdvance = PartyAdvanceManager.GetShowPartyAdvanceDetails(lblID.Text);
        if (aPartyAdvance != null)
        {
            PartyAdvanceManager.DeletePartyAdvance(lblID.Text);
            ClientScript.RegisterStartupScript(this.GetType(), "ale", "alert('Record(s) is/are delete suceessfullly..!!');", true);
        }
    }
    protected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        try
        {           
            if (e.Row.RowType == DataControlRowType.DataRow | e.Row.RowType == DataControlRowType.Header | e.Row.RowType == DataControlRowType.Footer)
            {
                if (RadioButtonList1.SelectedValue == "PA")
                {
                    e.Row.Cells[4].Attributes.Add("style", "display:none");
                    e.Row.Cells[5].Attributes.Add("style", "display:none");
                }
                else
                {
                    e.Row.Cells[3].Attributes.Add("style", "display:none");
                }
                e.Row.Cells[6].Attributes.Add("style", "display:none");
            }     
           
        }
        catch (FormatException fex)
        {
            ClientScript.RegisterStartupScript(this.GetType(), "Warning", "alert('" + fex.Message + "');", true);
        }
        catch (Exception ex)
        {
            if (ex.Message.Contains("Database"))
                ClientScript.RegisterStartupScript(this.GetType(), "Warning", "alert('Database Maintain Error. Contact to the Software Provider..!!');", true);
            else
                ClientScript.RegisterStartupScript(this.GetType(), "Warning", "alert('There is some problem to do the task. Try again properly.!!');", true);
        }
    }
    protected void Clear_Click(object sender, EventArgs e)
    {
        ddlName.Enabled = PaymentMathord.Visible = false;
        btnSave.Enabled = true;
        RadioButtonList1_SelectedIndexChanged(sender, e);
    }   
    protected void ddlPaymentMethord_SelectedIndexChanged1(object sender, EventArgs e)
    {
        if (ddlPaymentMethord.SelectedValue == "Q")
        {
            PaymentMathord.Visible = true;
        }
        else
        {
            PaymentMathord.Visible = false;
        }
        UP2.Update();
    }
    protected void GridView1_SelectedIndexChanged(object sender, EventArgs e)
    {
        lblID.Text = GridView1.SelectedRow.Cells[6].Text;
        PartyAdvance aPartyAdvance = PartyAdvanceManager.GetShowPartyAdvanceDetails(lblID.Text);
        if (aPartyAdvance != null)
        {
            ddlName.Enabled = false;
            ddlName.SelectedValue = aPartyAdvance.MstID;
            ddlName_SelectedIndexChanged(sender, e);
            txtDate.Text = aPartyAdvance.PayDate;
            ddlPaymentMethord.SelectedValue = aPartyAdvance.PayMethod.Trim();
            if (RadioButtonList1.SelectedValue == "PA")
            {
               // txtVoucherNo.Text = aPartyAdvance.VoucherNo;
                txtAdvance.Text = aPartyAdvance.Advance;
            }
            else { txtAdvance.Text = aPartyAdvance.PaymentAmount; txtVoucherNo.Text = aPartyAdvance.GRN; lblPVID.Text = aPartyAdvance.VoucherNo; }
            if (ddlPaymentMethord.SelectedValue == "Q")
            {
                PaymentMathord.Visible = true;
                ddlBankName.SelectedValue = aPartyAdvance.Bank_id;
                txtChqueNo.Text = aPartyAdvance.ChequeNo;
                txtChqDate.Text = aPartyAdvance.ChequeDate;
                ddlChequeStatus.SelectedValue = aPartyAdvance.Chk_Status;
            }
            else
            {
                PaymentMathord.Visible = false;
            }
            UP1.Update();
            UP2.Update();
            UP3.Update();
        }
    }
    protected void txtGoodsReceiveNo_TextChanged(object sender, EventArgs e)
    {
        DataTable dt = PVReturnManager.GetShowPVMasterInfo(txtVoucherNo.Text);
        if (dt.Rows.Count > 0)
        {          
            lblPVID.Text = dt.Rows[0]["ID"].ToString();
           // lblGlCoa.Text = dt.Rows[0]["Gl_CoaCode"].ToString();        
        }
    }
    protected void btnPrint_Click(object sender, EventArgs e)
    {
        string Value , filename= "";
        if (RadioButtonList1.SelectedValue == "PA")
        { Value = "PA"; filename = "PartyAdvance"; }
        else
        { Value = "SAP"; filename = "SupplierPayment"; }
        int VoucherID = IdManager.GetShowSingleValueInt("VCH_SYS_NO", "PAYEE='" + Value + "' and SERIAL_NO", "GL_TRANS_MST", lblID.Text.Trim());
        //lblID.Text = VoucherID.ToString();
        getVoucherPdf(VoucherID,filename);
    }
    protected void GridView1_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        GridView1.DataSource = Session["SP"];
        GridView1.PageIndex = e.NewPageIndex;
        GridView1.DataBind();
    }
    private void getVoucherPdf(int VoucherID, string filename)
    {
        VouchMst vmst = VouchManager.GetVouchMst(VoucherID.ToString());
        if (vmst != null)
        {
           // string filename = "SupplierPayment";
            Response.Clear();
            Response.ContentType = "application/pdf";
            Response.AddHeader("content-disposition", "attachment; filename=" + filename + ".pdf");
            Document document = new Document(PageSize.A4);
            PdfWriter writer = PdfWriter.GetInstance(document, Response.OutputStream);
            document.Open();
            iTextSharp.text.Rectangle page = document.PageSize;
            PdfPTable head = new PdfPTable(1);
            head.TotalWidth = page.Width - 50;

            PdfPCell cell;

            byte[] logo = GlBookManager.GetGlLogo(Session["book"].ToString());
            iTextSharp.text.Image gif = iTextSharp.text.Image.GetInstance(logo);
            gif.Alignment = iTextSharp.text.Image.MIDDLE_ALIGN;
            gif.ScalePercent(8f);

            float[] titwidth = new float[2] { 10, 200 };
            PdfPTable dth = new PdfPTable(titwidth);
            dth.WidthPercentage = 100;

            cell = new PdfPCell(gif);
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.Rowspan = 4;
            cell.BorderWidth = 0f;
            cell.FixedHeight = 80f;
            dth.AddCell(cell);
            cell = new PdfPCell(new Phrase(Session["org"].ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, iTextSharp.text.Font.BOLD)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            cell.FixedHeight = 20f;
            dth.AddCell(cell);
            cell = new PdfPCell(new Phrase(Session["add1"].ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, 10, iTextSharp.text.Font.BOLD)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            cell.FixedHeight = 20f;
            dth.AddCell(cell);
            cell = new PdfPCell(new Phrase(Session["add2"].ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, 10, iTextSharp.text.Font.BOLD)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            cell.FixedHeight = 20f;
            dth.AddCell(cell);
            string vchtype = "";
            if (vmst.VchCode == "02") { vchtype = "Credit Voucher"; }
            else if (vmst.VchCode == "01") { vchtype = "Debit Voucher"; }
            else if (vmst.VchCode == "03") { vchtype = "Journal Voucher"; }

            cell = new PdfPCell(new Phrase(vchtype, FontFactory.GetFont(FontFactory.TIMES_ROMAN, 10, iTextSharp.text.Font.BOLD)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            cell.FixedHeight = 20f;
            dth.AddCell(cell);
            document.Add(dth);
            LineSeparator line = new LineSeparator(1f, 100, null, Element.ALIGN_CENTER, -2);
            document.Add(line);
            PdfPTable dtempty = new PdfPTable(1);
            cell = new PdfPCell(FormatHeaderPhrase(""));
            cell.BorderWidth = 0f;
            cell.FixedHeight = 10f;
            dtempty.AddCell(cell);
            document.Add(dtempty);
            float[] widthmst = new float[5] { 20, 30, 20, 20, 20 };
            PdfPTable pdtMst = new PdfPTable(widthmst);
            pdtMst.WidthPercentage = 100;
            cell = new PdfPCell(FormatPhrase("Voucher No"));
            cell.HorizontalAlignment = 0;
            cell.VerticalAlignment = 1;
            //cell.BorderWidth = 0;
            // cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtMst.AddCell(cell);
            cell = new PdfPCell(FormatPhrase(vmst.VchSysNo));
            cell.HorizontalAlignment = 0;
            cell.VerticalAlignment = 1;
            //cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtMst.AddCell(cell);
            cell = new PdfPCell(FormatPhrase(""));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0;
            // cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtMst.AddCell(cell);
            cell = new PdfPCell(FormatPhrase("Voucher Date"));
            cell.HorizontalAlignment = 0;
            cell.VerticalAlignment = 1;
            //cell.BorderWidth = 0;
            //cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtMst.AddCell(cell);
            cell = new PdfPCell(FormatPhrase(DataManager.DateEncode(vmst.ValueDate).ToString(IdManager.DateFormat())));
            cell.HorizontalAlignment = 0;
            cell.VerticalAlignment = 1;
            // cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtMst.AddCell(cell);
            cell = new PdfPCell(FormatPhrase("Reference No"));
            cell.HorizontalAlignment = 0;
            cell.VerticalAlignment = 1;
            //cell.BorderWidth = 0;
            //cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtMst.AddCell(cell);
            cell = new PdfPCell(FormatPhrase(vmst.VchRefNo));
            cell.HorizontalAlignment = 0;
            cell.VerticalAlignment = 1;
            //cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtMst.AddCell(cell);
            cell = new PdfPCell(FormatPhrase(""));
            cell.HorizontalAlignment = 0;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0;
            // cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtMst.AddCell(cell);
            cell = new PdfPCell(FormatPhrase("Serial No"));
            cell.HorizontalAlignment = 0;
            cell.VerticalAlignment = 1;
            // cell.BorderWidth = 0;
            // cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtMst.AddCell(cell);
            cell = new PdfPCell(FormatPhrase(vmst.SerialNo));
            cell.HorizontalAlignment = 0;
            cell.VerticalAlignment = 1;
            //cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtMst.AddCell(cell);

            if (decimal.Parse(string.IsNullOrEmpty(vmst.CheckNo) ? "0" : vmst.CheckNo) > decimal.Zero)
            {
                cell = new PdfPCell(FormatPhrase("Cheque No"));
                cell.HorizontalAlignment = 0;
                cell.VerticalAlignment = 1;
                //cell.BorderWidth = 0;
                //  cell.FixedHeight = 18f;
                cell.BorderColor = BaseColor.LIGHT_GRAY;
                pdtMst.AddCell(cell);
                cell = new PdfPCell(FormatPhrase(vmst.CheckNo));
                cell.HorizontalAlignment = 0;
                cell.VerticalAlignment = 1;
                // cell.FixedHeight = 18f;
                cell.BorderColor = BaseColor.LIGHT_GRAY;
                pdtMst.AddCell(cell);
                cell = new PdfPCell(FormatPhrase(""));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                //  cell.BorderWidth = 0;
                //  cell.FixedHeight = 18f;
                cell.BorderColor = BaseColor.LIGHT_GRAY;
                pdtMst.AddCell(cell);
                cell = new PdfPCell(FormatPhrase("Cheque Date"));
                cell.HorizontalAlignment = 0;
                cell.VerticalAlignment = 1;
                // cell.BorderWidth = 0;
                // cell.FixedHeight = 18f;
                cell.BorderColor = BaseColor.LIGHT_GRAY;
                pdtMst.AddCell(cell);
                cell = new PdfPCell(FormatPhrase(DataManager.DateEncode(vmst.CheqDate).ToString(IdManager.DateFormat())));
                cell.HorizontalAlignment = 0;
                cell.VerticalAlignment = 1;
                // cell.FixedHeight = 18f;
                cell.BorderColor = BaseColor.LIGHT_GRAY;
                pdtMst.AddCell(cell);

                cell = new PdfPCell(FormatPhrase("Cheque Amount"));
                cell.HorizontalAlignment = 0;
                cell.VerticalAlignment = 1;
                //  cell.BorderWidth = 0;
                // cell.FixedHeight = 18f;
                cell.BorderColor = BaseColor.LIGHT_GRAY;
                pdtMst.AddCell(cell);
                cell = new PdfPCell(FormatPhrase(vmst.CheqAmnt));
                cell.HorizontalAlignment = 0;
                cell.VerticalAlignment = 1;
                // cell.FixedHeight = 18f;
                cell.BorderColor = BaseColor.LIGHT_GRAY;
                pdtMst.AddCell(cell);
                cell = new PdfPCell(FormatPhrase(""));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                cell.BorderWidth = 0;
                cell.FixedHeight = 18f;
                cell.BorderColor = BaseColor.LIGHT_GRAY;
                pdtMst.AddCell(cell);
                cell = new PdfPCell(FormatPhrase(""));
                cell.HorizontalAlignment = 0;
                cell.VerticalAlignment = 1;
                cell.BorderWidth = 0;
                cell.FixedHeight = 18f;
                cell.BorderColor = BaseColor.LIGHT_GRAY;
                pdtMst.AddCell(cell);
                cell = new PdfPCell(FormatPhrase(""));
                cell.HorizontalAlignment = 0;
                cell.VerticalAlignment = 1;
                cell.FixedHeight = 18f;
                cell.BorderWidth = 0;
                cell.BorderColor = BaseColor.LIGHT_GRAY;
                pdtMst.AddCell(cell);
            }

            cell = new PdfPCell(FormatPhrase("Particulars"));
            cell.HorizontalAlignment = 0;
            cell.VerticalAlignment = 1;
            // cell.BorderWidth = 0;
            // cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtMst.AddCell(cell);
            cell = new PdfPCell(FormatPhraseOnSingleFont(vmst.Particulars));
            cell.HorizontalAlignment = 0;
            cell.VerticalAlignment = 1;
            cell.Colspan = 4;
            cell.FixedHeight = 35f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtMst.AddCell(cell);
            document.Add(pdtMst);

            DataTable dtdtl = VouchManager.GetVouchDtlRpt(vmst.VchSysNo);
            float[] widthdtl = new float[3] { 50, 20, 20 };
            PdfPTable pdtDtl = new PdfPTable(widthdtl);
            pdtDtl.WidthPercentage = 100;
            decimal ctot = decimal.Zero;
            decimal dtot = decimal.Zero;

            cell = new PdfPCell(FormatHeaderPhrase("Account Description"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            //cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtDtl.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Debit "));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            // cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtDtl.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Credit "));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            // cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtDtl.AddCell(cell);

            foreach (DataRow row in dtdtl.Rows)
            {
                if (row["particulars"].ToString() != "")
                {
                    cell = new PdfPCell(FormatPhrase(row["particulars"].ToString()));
                    cell.HorizontalAlignment = 0;
                    cell.VerticalAlignment = 1;
                    // cell.FixedHeight = 20f;
                    cell.BorderColor = BaseColor.LIGHT_GRAY;
                    pdtDtl.AddCell(cell);
                    cell = new PdfPCell(FormatPhrase(row["amount_dr"].ToString()));
                    cell.HorizontalAlignment = 2;
                    cell.VerticalAlignment = 1;
                    //cell.FixedHeight = 20f;
                    cell.BorderColor = BaseColor.LIGHT_GRAY;
                    pdtDtl.AddCell(cell);
                    cell = new PdfPCell(FormatPhrase(row["amount_cr"].ToString()));
                    cell.HorizontalAlignment = 2;
                    cell.VerticalAlignment = 1;
                    // cell.FixedHeight = 20f;
                    cell.BorderColor = BaseColor.LIGHT_GRAY;
                    pdtDtl.AddCell(cell);

                    if (row["amount_cr"].ToString() != "")
                    {
                        ctot += decimal.Parse(row["amount_cr"].ToString());
                    }
                    if (row["amount_dr"].ToString() != "")
                    {
                        dtot += decimal.Parse(row["amount_dr"].ToString());
                    }
                }
            }
            decimal Total = (ctot + dtot);
            cell = new PdfPCell(FormatHeaderPhrase("Total"));
            cell.HorizontalAlignment = 2;
            cell.VerticalAlignment = 1;
            //  cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtDtl.AddCell(cell);
            cell = new PdfPCell(FormatPhrase(dtot.ToString("N3")));
            cell.HorizontalAlignment = 2;
            cell.VerticalAlignment = 1;
            //cell.FixedHeight = 20f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtDtl.AddCell(cell);
            cell = new PdfPCell(FormatPhrase(ctot.ToString("N3")));
            cell.HorizontalAlignment = 2;
            cell.VerticalAlignment = 1;
            // cell.FixedHeight = 20f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtDtl.AddCell(cell);

            document.Add(pdtDtl);

            PdfPTable dtempty1 = new PdfPTable(1);
            dtempty1.WidthPercentage = 100;
            cell = new PdfPCell(FormatPhrase("In word: " + DataManager.GetLiteralAmt(dtot.ToString()).Replace("  ", " ").Replace("  ", " ")));
            cell.VerticalAlignment = 0;
            cell.HorizontalAlignment = 0;
            cell.BorderWidth = 0f;
            cell.FixedHeight = 60f;
            dtempty1.AddCell(cell);
            document.Add(dtempty1);

            float[] widthsig = new float[] { 20, 5, 20, 5, 20 };
            PdfPTable pdtsig = new PdfPTable(widthsig);
            pdtsig.WidthPercentage = 100;
            cell = new PdfPCell(FormatPhrase("Accountant"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.Border = 1;
            cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtsig.AddCell(cell);
            cell = new PdfPCell(FormatPhrase(""));
            cell.HorizontalAlignment = 0;
            cell.VerticalAlignment = 1;
            cell.Border = 0;
            cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtsig.AddCell(cell);
            cell = new PdfPCell(FormatPhrase(" "));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.Border = 0;
            cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtsig.AddCell(cell);
            cell = new PdfPCell(FormatPhrase(""));
            cell.HorizontalAlignment = 0;
            cell.VerticalAlignment = 1;
            cell.Border = 0;
            cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtsig.AddCell(cell);
            cell = new PdfPCell(FormatPhrase("Manager/Director"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.Border = 1;
            cell.FixedHeight = 18f;
            cell.BorderColor = BaseColor.LIGHT_GRAY;
            pdtsig.AddCell(cell);
            document.Add(pdtsig);

            document.Close();
            Response.Flush();
            Response.End();
        }


        //byte[] byt = ms.GetBuffer();
        //if (Session["rptbyte"] != null) { byte[] rptbyt = (byte[])Session["rptbyte"]; rptbyt = byt; } else { Session["rptbyte"] = byt; }
    }
    private static Phrase FormatPhraseOnSingleFont(string value)
    {
        return new Phrase(value, FontFactory.GetFont(FontFactory.TIMES_ROMAN, 7));
    }
    private static Phrase FormatPhrase(string value)
    {
        return new Phrase(value, FontFactory.GetFont(FontFactory.TIMES_ROMAN, 9));
    }
    private static Phrase FormatHeaderPhrase(string value)
    {
        return new Phrase(value, FontFactory.GetFont(FontFactory.TIMES_ROMAN, 10, iTextSharp.text.Font.BOLD));
    }   
}