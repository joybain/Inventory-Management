using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using iTextSharp.text;
using System.Data;
using iTextSharp.text.pdf;
using iTextSharp.text.pdf.draw;
using System.IO;
using Delve;
using sales;

public partial class frmInvChequeStatement : System.Web.UI.Page
{
    private static Permis per;
    protected void Page_Load(object sender, EventArgs e)
    {
        if (Session["user"] == null)
        {
            if (Session.SessionID != "" | Session.SessionID != null)
            {
                clsSession ses = clsSessionManager.getSession(Session.SessionID);
                if (ses != null)
                {
                    Session["user"] = ses.UserId;
                    Session["book"] = "AMB";
                    string connectionString = DataManager.OraConnString();
                    SqlDataReader dReader;
                    SqlConnection conn = new SqlConnection();
                    conn.ConnectionString = connectionString;
                    SqlCommand cmd = new SqlCommand();
                    cmd.Connection = conn;
                    cmd.CommandType = CommandType.Text;
                    cmd.CommandText =
                        "Select user_grp,[description],UserType,case when UserType=1 then 'Bangladesh' else 'Philippine' end AS[LoginCountry] from utl_userinfo where upper(user_name)=upper('" +
                        Session["user"].ToString().ToUpper() + "') and status='A'";
                    conn.Open();
                    dReader = cmd.ExecuteReader();
                    string wnot = "";
                    if (dReader.HasRows == true)
                    {
                        while (dReader.Read())
                        {
                            Session["userlevel"] = int.Parse(dReader["user_grp"].ToString());
                            //Session["dept"] = dReader["dept"].ToString();
                            wnot = "Welcome " + dReader["description"].ToString();
                        }
                        Session["wnote"] = wnot;
                        Session["LoginCountry"] = dReader["LoginCountry"].ToString();
                        cmd = new SqlCommand();
                        cmd.Connection = conn;
                        cmd.CommandType = CommandType.Text;
                        //cmd.CommandText = "Select book_desc,company_address1,company_address2,separator_type from gl_set_of_books where book_name='" + Session["book"].ToString() + "' ";
                        if (Convert.ToInt32(dReader["UserType"].ToString()) == 2)
                        {

                            Session["bookMAN"] = "MAN";
                        }
                        else
                        {
                            Session["bookMAN"] = Session["book"].ToString();
                        }
                        cmd.CommandText = "Select book_desc,company_address1,company_address2,separator_type,ShotName from gl_set_of_books where book_name='" + Session["bookMAN"] + "' ";

                        if (dReader.IsClosed == false)
                        {
                            dReader.Close();
                        }
                        dReader = cmd.ExecuteReader();
                        if (dReader.HasRows == true)
                        {
                            while (dReader.Read())
                            {
                                Session["septype"] = dReader["separator_type"].ToString();
                                Session["org"] = dReader["book_desc"].ToString();
                                Session["add1"] = dReader["company_address1"].ToString();
                                Session["add2"] = dReader["company_address2"].ToString();
                            }
                        }
                    }
                    dReader.Close();
                    conn.Close();
                }
            }
        }
        try
        {
            string pageName = DataManager.GetCurrentPageName();
            string modid = PermisManager.getModuleId(pageName);
            per = PermisManager.getUsrPermis(Session["user"].ToString().Trim().ToUpper(), modid);
            if (per != null && per.AllowView == "Y")
            {
                ((Label)Page.Master.FindControl("lblLogin")).Text = Session["wnote"].ToString();
                ((Label)Page.Master.FindControl("lblCountryName")).Text = Session["LoginCountry"].ToString();
                ((LinkButton)Page.Master.FindControl("lbLogout")).Visible = true;
            }
            else
            {
                Response.Redirect("Home.aspx?sid=sam");
            }
        }
        catch
        {
            Response.Redirect("Default.aspx?sid=sam");
        }
        if (!IsPostBack)
        {
            string queryLoc = "select '' ID,'' ContactName  union select ID ,ContactName from Supplier order by 1";
            util.PopulationDropDownList(ddlSupplier, "CostType", queryLoc, "ContactName", "ID");
        }
    }
    protected void RadioButtonList1_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (RadioButtonList1.SelectedValue == "SCS")
        {
            string queryLoc = "select ID ,ContactName from Supplier order by 1";
            util.PopulationDropDownList(ddlSupplier, "CostType", queryLoc, "ContactName", "ID");
            ddlSupplier.Items.Insert(0,"");
        }
        else
        {
            string queryLoc = "SELECT [ID],[ContactName] FROM [Customer] order by ID";
            util.PopulationDropDownList(ddlSupplier, "CostType", queryLoc, "ContactName", "ID");
            ddlSupplier.Items.Insert(0, "");
        }
    }
    protected void btnPrint_Click(object sender, EventArgs e)
    {
        string P = "";
        if (RadioButtonList1.SelectedValue == "SCS")
        {
            if (ddlSupplier.SelectedItem.Text == "" && txtStartDate.Text=="" && txtEndDate.Text=="")
            {            
                ChequePrint("");
            }
            else if (ddlSupplier.SelectedItem.Text != "" && txtStartDate.Text == "" && txtEndDate.Text == "")
            {
                P ="For "+ ddlSupplier.SelectedItem.Text;
                ChequePrintSupplier(P); 
            }
            else if (ddlSupplier.SelectedItem.Text != "" && txtStartDate.Text != "" && txtEndDate.Text != "")
            {
                P ="For "+ddlSupplier.SelectedItem.Text+" On Date ("+txtStartDate.Text+" TO "+txtEndDate.Text+")";
                ChequePrintSupplier(P); 
            }
            else if (ddlSupplier.SelectedItem.Text == "" && txtStartDate.Text != "" && txtEndDate.Text != "")
            {
                P =" On Date (" + txtStartDate.Text + " TO " + txtEndDate.Text + ")";
                ChequePrint("");
            }
        }
        else
        {
            if (ddlSupplier.SelectedItem.Text == "" && txtStartDate.Text == "" && txtEndDate.Text == "")
            {
                ChequePrintCus("");
            }
            else if (ddlSupplier.SelectedItem.Text != "" && txtStartDate.Text == "" && txtEndDate.Text == "")
            {
                P = "For " + ddlSupplier.SelectedItem.Text;
                ChequePrintCustomer(P);
            }
            else if (ddlSupplier.SelectedItem.Text != "" && txtStartDate.Text != "" && txtEndDate.Text != "")
            {
                P = "For " + ddlSupplier.SelectedItem.Text + " On Date (" + txtStartDate.Text + " TO " + txtEndDate.Text + ")";
                ChequePrintCustomer(P);
            }
            else if (ddlSupplier.SelectedItem.Text == "" && txtStartDate.Text != "" && txtEndDate.Text != "")
            {
                P = " On Date (" + txtStartDate.Text + " TO " + txtEndDate.Text + ")";
                ChequePrintCus("");
            }
        }
    }

    public void ChequePrintSupplier(string p)
    {
        DataTable dt = SupplierManager.GetShowChequeStatement(RadioButtonList2.SelectedValue, txtStartDate.Text, txtEndDate.Text, ddlSupplier.SelectedValue);
        if (dt.Rows.Count > 0)
        {
            Response.Clear();
            Response.ContentType = "application/pdf";
            Response.AddHeader("content-disposition", "attachment; filename='Cheque Statement'.pdf");
            Document document = new Document();
            document = new Document(PageSize.A4);
            MemoryStream ms = new MemoryStream();
            PdfWriter writer = PdfWriter.GetInstance(document, Response.OutputStream);
            pdfPage page = new pdfPage();
            writer.PageEvent = page;
            document.Open();

            byte[] logo = GlBookManager.GetGlLogo(Session["book"].ToString());
            iTextSharp.text.Image gif = iTextSharp.text.Image.GetInstance(logo);
            gif.Alignment = iTextSharp.text.Image.MIDDLE_ALIGN;
            gif.ScalePercent(8f);

            float[] titwidth = new float[2] { 5, 200 };
            PdfPCell cell;
            PdfPTable dth = new PdfPTable(titwidth);
            dth.WidthPercentage = 100;
            cell = new PdfPCell(gif);
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.Rowspan = 4;
            cell.BorderWidth = 0f;
            dth.AddCell(cell);
            cell = new PdfPCell(new Phrase(Session["org"].ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, iTextSharp.text.Font.BOLD)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            //cell.FixedHeight = 20f;
            dth.AddCell(cell);
            cell = new PdfPCell(new Phrase(Session["add1"].ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, 10, iTextSharp.text.Font.NORMAL)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            //cell.FixedHeight = 20f;
            dth.AddCell(cell);
            cell = new PdfPCell(new Phrase(Session["add2"].ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, 10, iTextSharp.text.Font.NORMAL)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            //cell.FixedHeight = 20f;
            dth.AddCell(cell);
            
            cell = new PdfPCell(new Phrase(RadioButtonList2.SelectedItem.Text + "  Cheque Statement "+p, FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, iTextSharp.text.Font.BOLD)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            dth.AddCell(cell);
            document.Add(dth);

            LineSeparator line = new LineSeparator(0f, 100, null, Element.ALIGN_CENTER, -2);
            document.Add(line);
            PdfPTable dtempty = new PdfPTable(1);
            cell.BorderWidth = 0f;
            cell.FixedHeight = 5f;
            dtempty.AddCell(cell);
            document.Add(dtempty);

            float[] width = new float[7] { 6, 10, 25, 15, 10, 15,10 };
            PdfPTable pdtc = new PdfPTable(width);
            pdtc.WidthPercentage = 100;
            //pdtc.HeaderRows =3;       
            pdtc.HeaderRows = 1;

            cell = new PdfPCell(FormatHeaderPhrase("Serial"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);           
            cell = new PdfPCell(FormatHeaderPhrase("Date"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Bank Name"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Cheque NO"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Cheque Date"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Cheque Amount"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Shipment/GR. NO"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            int sertai = 1;
            foreach (DataRow row in dt.Rows)
            {

                cell = new PdfPCell(FormatPhrase(sertai.ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);
                sertai++;               

                cell = new PdfPCell(FormatPhrase((DataManager.DateEncode(row["PmDate"].ToString())).ToString(IdManager.DateFormat())));
                cell.HorizontalAlignment = 0;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase(row["bank_name"].ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase(row["ChequeNo"].ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase((DataManager.DateEncode(row["ChequeDate"].ToString())).ToString(IdManager.DateFormat())));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase(row["PayAmt"].ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase(row["ShiftmentID"].ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

            }

            document.Add(pdtc);
            document.Close();
            Response.Flush();
            Response.End();
        }
    }
    public void ChequePrint(string P)
    {
        DataTable dt = SupplierManager.GetShowChequeStatement(RadioButtonList2.SelectedValue, txtStartDate.Text, txtEndDate.Text, ddlSupplier.SelectedValue);
        if (dt.Rows.Count > 0)
        {
            Response.Clear();
            Response.ContentType = "application/pdf";
            Response.AddHeader("content-disposition", "attachment; filename='Cheque Statement'.pdf");
            Document document = new Document();
            document = new Document(PageSize.A4.Rotate());
            MemoryStream ms = new MemoryStream();
            PdfWriter writer = PdfWriter.GetInstance(document, Response.OutputStream);
            pdfPage page = new pdfPage();
            writer.PageEvent = page;
            document.Open();

            byte[] logo = GlBookManager.GetGlLogo(Session["book"].ToString());
            iTextSharp.text.Image gif = iTextSharp.text.Image.GetInstance(logo);
            gif.Alignment = iTextSharp.text.Image.MIDDLE_ALIGN;
            gif.ScalePercent(8f);

            float[] titwidth = new float[2] { 5, 200 };
            PdfPCell cell;
            PdfPTable dth = new PdfPTable(titwidth);
            dth.WidthPercentage = 100;
            cell = new PdfPCell(gif);
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.Rowspan = 4;
            cell.BorderWidth = 0f;
            dth.AddCell(cell);
            cell = new PdfPCell(new Phrase(Session["org"].ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, iTextSharp.text.Font.BOLD)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            //cell.FixedHeight = 20f;
            dth.AddCell(cell);
            cell = new PdfPCell(new Phrase(Session["add1"].ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, 10, iTextSharp.text.Font.NORMAL)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            //cell.FixedHeight = 20f;
            dth.AddCell(cell);
            cell = new PdfPCell(new Phrase(Session["add2"].ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, 10, iTextSharp.text.Font.NORMAL)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            //cell.FixedHeight = 20f;
            dth.AddCell(cell);

            cell = new PdfPCell(new Phrase(RadioButtonList2.SelectedItem.Text + "  Cheque Statement " + P, FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, iTextSharp.text.Font.BOLD)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            dth.AddCell(cell);
            document.Add(dth);

            LineSeparator line = new LineSeparator(0f, 100, null, Element.ALIGN_CENTER, -2);
            document.Add(line);
            PdfPTable dtempty = new PdfPTable(1);
            cell.BorderWidth = 0f;
            cell.FixedHeight = 5f;
            dtempty.AddCell(cell);
            document.Add(dtempty);

            float[] width = new float[8] { 6, 10, 20, 15, 15, 15, 10 ,20};
            PdfPTable pdtc = new PdfPTable(width);
            pdtc.WidthPercentage = 100;
            //pdtc.HeaderRows =3;       
            pdtc.HeaderRows = 1;

            cell = new PdfPCell(FormatHeaderPhrase("Serial"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Supplier Name"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Date"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Bank Name"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Cheque NO"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Cheque Date"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Cheque Amount"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Shipment/GR. NO"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            int sertai = 1;
            foreach (DataRow row in dt.Rows)
            {

                cell = new PdfPCell(FormatPhrase(sertai.ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);
                sertai ++;
                cell = new PdfPCell(FormatPhrase(row["ContactName"].ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase((DataManager.DateEncode(row["PmDate"].ToString())).ToString(IdManager.DateFormat())));
                cell.HorizontalAlignment = 0;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase(row["bank_name"].ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase(row["ChequeNo"].ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase((DataManager.DateEncode(row["ChequeDate"].ToString())).ToString(IdManager.DateFormat())));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase(row["PayAmt"].ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase(row["ShiftmentID"].ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

            }

            document.Add(pdtc);
            document.Close();
            Response.Flush();
            Response.End();
        }
    }

    public void ChequePrintCustomer(string p)
    {
        DataTable dt = clsClientInfoManager.GetShowChequeStatement(RadioButtonList2.SelectedValue, txtStartDate.Text, txtEndDate.Text, ddlSupplier.SelectedValue);
        if (dt.Rows.Count > 0)
        {
            Response.Clear();
            Response.ContentType = "application/pdf";
            Response.AddHeader("content-disposition", "attachment; filename='Cheque Statement'.pdf");
            Document document = new Document();
            document = new Document(PageSize.A4);
            MemoryStream ms = new MemoryStream();
            PdfWriter writer = PdfWriter.GetInstance(document, Response.OutputStream);
            pdfPage page = new pdfPage();
            writer.PageEvent = page;
            document.Open();

            byte[] logo = GlBookManager.GetGlLogo(Session["book"].ToString());
            iTextSharp.text.Image gif = iTextSharp.text.Image.GetInstance(logo);
            gif.Alignment = iTextSharp.text.Image.MIDDLE_ALIGN;
            gif.ScalePercent(8f);

            float[] titwidth = new float[2] { 5, 200 };
            PdfPCell cell;
            PdfPTable dth = new PdfPTable(titwidth);
            dth.WidthPercentage = 100;
            cell = new PdfPCell(gif);
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.Rowspan = 4;
            cell.BorderWidth = 0f;
            dth.AddCell(cell);
            cell = new PdfPCell(new Phrase(Session["org"].ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, iTextSharp.text.Font.BOLD)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            //cell.FixedHeight = 20f;
            dth.AddCell(cell);
            cell = new PdfPCell(new Phrase(Session["add1"].ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, 10, iTextSharp.text.Font.NORMAL)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            //cell.FixedHeight = 20f;
            dth.AddCell(cell);
            cell = new PdfPCell(new Phrase(Session["add2"].ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, 10, iTextSharp.text.Font.NORMAL)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            //cell.FixedHeight = 20f;
            dth.AddCell(cell);

            cell = new PdfPCell(new Phrase(RadioButtonList2.SelectedItem.Text + "  Cheque Statement " + p, FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, iTextSharp.text.Font.BOLD)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            dth.AddCell(cell);
            document.Add(dth);

            LineSeparator line = new LineSeparator(0f, 100, null, Element.ALIGN_CENTER, -2);
            document.Add(line);
            PdfPTable dtempty = new PdfPTable(1);
            cell.BorderWidth = 0f;
            cell.FixedHeight = 5f;
            dtempty.AddCell(cell);
            document.Add(dtempty);

            float[] width = new float[6] { 7, 15, 20, 15, 15, 20 };
            PdfPTable pdtc = new PdfPTable(width);
            pdtc.WidthPercentage = 100;
            //pdtc.HeaderRows =3;       
            pdtc.HeaderRows = 1;

            cell = new PdfPCell(FormatHeaderPhrase("Serial"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Date"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Bank Name"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Cheque NO"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Cheque Date"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Cheque Amount"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            int sertai = 1;
            foreach (DataRow row in dt.Rows)
            {

                cell = new PdfPCell(FormatPhrase(sertai.ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);
                sertai++;

                cell = new PdfPCell(FormatPhrase((DataManager.DateEncode(row["PmDate"].ToString())).ToString(IdManager.DateFormat())));
                cell.HorizontalAlignment = 0;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase(row["bank_name"].ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase(row["ChequeNo"].ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase(row["ChequeDate"].ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase(row["PayAmt"].ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

            }

            document.Add(pdtc);
            document.Close();
            Response.Flush();
            Response.End();
        }
    }
    public void ChequePrintCus(string P)
    {
        DataTable dt = clsClientInfoManager.GetShowChequeStatement(RadioButtonList2.SelectedValue, txtStartDate.Text, txtEndDate.Text, ddlSupplier.SelectedValue);
        if (dt.Rows.Count > 0)
        {
            Response.Clear();
            Response.ContentType = "application/pdf";
            Response.AddHeader("content-disposition", "attachment; filename='Cheque Statement'.pdf");
            Document document = new Document();
            document = new Document(PageSize.A4.Rotate());
            MemoryStream ms = new MemoryStream();
            PdfWriter writer = PdfWriter.GetInstance(document, Response.OutputStream);
            pdfPage page = new pdfPage();
            writer.PageEvent = page;
            document.Open();

            byte[] logo = GlBookManager.GetGlLogo(Session["book"].ToString());
            iTextSharp.text.Image gif = iTextSharp.text.Image.GetInstance(logo);
            gif.Alignment = iTextSharp.text.Image.MIDDLE_ALIGN;
            gif.ScalePercent(8f);

            float[] titwidth = new float[2] { 5, 200 };
            PdfPCell cell;
            PdfPTable dth = new PdfPTable(titwidth);
            dth.WidthPercentage = 100;
            cell = new PdfPCell(gif);
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.Rowspan = 4;
            cell.BorderWidth = 0f;
            dth.AddCell(cell);
            cell = new PdfPCell(new Phrase(Session["org"].ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, iTextSharp.text.Font.BOLD)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            //cell.FixedHeight = 20f;
            dth.AddCell(cell);
            cell = new PdfPCell(new Phrase(Session["add1"].ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, 10, iTextSharp.text.Font.NORMAL)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            //cell.FixedHeight = 20f;
            dth.AddCell(cell);
            cell = new PdfPCell(new Phrase(Session["add2"].ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, 10, iTextSharp.text.Font.NORMAL)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            //cell.FixedHeight = 20f;
            dth.AddCell(cell);

            cell = new PdfPCell(new Phrase(RadioButtonList2.SelectedItem.Text + "  Cheque Statement " + P, FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, iTextSharp.text.Font.BOLD)));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            cell.BorderWidth = 0f;
            dth.AddCell(cell);
            document.Add(dth);

            LineSeparator line = new LineSeparator(0f, 100, null, Element.ALIGN_CENTER, -2);
            document.Add(line);
            PdfPTable dtempty = new PdfPTable(1);
            cell.BorderWidth = 0f;
            cell.FixedHeight = 5f;
            dtempty.AddCell(cell);
            document.Add(dtempty);

            float[] width = new float[7] { 7, 25, 15, 20, 15, 15, 20 };
            PdfPTable pdtc = new PdfPTable(width);
            pdtc.WidthPercentage = 100;
            //pdtc.HeaderRows =3;       
            pdtc.HeaderRows = 1;

            cell = new PdfPCell(FormatHeaderPhrase("Serial"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Supplier Name"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Date"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Bank Name"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Cheque NO"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Cheque Date"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            cell = new PdfPCell(FormatHeaderPhrase("Cheque Amount"));
            cell.HorizontalAlignment = 1;
            cell.VerticalAlignment = 1;
            pdtc.AddCell(cell);
            int sertai = 1;
            foreach (DataRow row in dt.Rows)
            {

                cell = new PdfPCell(FormatPhrase(sertai.ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);
                sertai++;
                cell = new PdfPCell(FormatPhrase(row["ContactName"].ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase((DataManager.DateEncode(row["PmDate"].ToString())).ToString(IdManager.DateFormat())));
                cell.HorizontalAlignment = 0;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase(row["bank_name"].ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase(row["ChequeNo"].ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase((DataManager.DateEncode(row["ChequeDate"].ToString())).ToString(IdManager.DateFormat())));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

                cell = new PdfPCell(FormatPhrase(row["PayAmt"].ToString()));
                cell.HorizontalAlignment = 1;
                cell.VerticalAlignment = 1;
                pdtc.AddCell(cell);

            }

            document.Add(pdtc);
            document.Close();
            Response.Flush();
            Response.End();
        }
    }


    protected void btnClear_Click(object sender, EventArgs e)
    {
        var pageName = System.IO.Path.GetFileName(Request.Url.ToString());
        Response.Redirect(pageName);
    }
    private static Phrase FormatPhrase(string value)
    {
        return new Phrase(value, FontFactory.GetFont(FontFactory.TIMES_ROMAN, 9));
    }
    private static Phrase FormatHeaderTopPhrase(string value)
    {
        return new Phrase(value, FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, iTextSharp.text.Font.BOLD));
    }
    private static Phrase FormatHeaderPhrase(string value)
    {
        return new Phrase(value, FontFactory.GetFont(FontFactory.TIMES_ROMAN, 10, iTextSharp.text.Font.BOLD));
    }
}